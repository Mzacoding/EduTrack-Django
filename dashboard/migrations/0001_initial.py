# Generated by Django 5.1.6 on 2025-05-07 15:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('AdminId', models.AutoField(primary_key=True, serialize=False)),
                ('FirstName', models.CharField(max_length=25)),
                ('LastName', models.CharField(max_length=25)),
                ('Email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('D_Code', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('DepartmentName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('StaffNumber', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('FirstName', models.CharField(max_length=25)),
                ('LastName', models.CharField(max_length=25)),
                ('Email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('SemesterCode', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('SemesterName', models.CharField(max_length=50)),
                ('StartDate', models.DateField()),
                ('EndDate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='UserLogs',
            fields=[
                ('LogId', models.AutoField(primary_key=True, serialize=False)),
                ('AdminName', models.CharField(max_length=50)),
                ('LogDescription', models.CharField(max_length=100)),
                ('DateAndTime', models.DateTimeField(auto_now_add=True)),
                ('Details', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('AssessmentCode', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('AssessmentName', models.CharField(max_length=100)),
                ('TotalMark', models.IntegerField()),
                ('StaffNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.lecturer')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('StudentNumber', models.CharField(max_length=9, unique=True)),
                ('FirstName', models.CharField(max_length=25)),
                ('LastName', models.CharField(max_length=25)),
                ('Email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='student_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='student_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FaceRecognition',
            fields=[
                ('FaceRecognitionId', models.AutoField(primary_key=True, serialize=False)),
                ('FaceImg', models.BinaryField()),
                ('StudentNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMarks',
            fields=[
                ('StudentMarkId', models.AutoField(primary_key=True, serialize=False)),
                ('MarksObtained', models.IntegerField()),
                ('AssessmentCode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.assessment')),
                ('StudentNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.student')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('SubjectCode', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('SubjectName', models.CharField(max_length=100)),
                ('D_Code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.department')),
            ],
        ),
        migrations.CreateModel(
            name='StudentProgress',
            fields=[
                ('StudentProgressId', models.AutoField(primary_key=True, serialize=False)),
                ('Grade', models.CharField(max_length=10)),
                ('StudentNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.student')),
                ('SubjectCode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.subject')),
            ],
        ),
        migrations.CreateModel(
            name='LecturerCourses',
            fields=[
                ('LecturerCourseId', models.AutoField(primary_key=True, serialize=False)),
                ('StaffNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.lecturer')),
                ('SubjectCode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('EnrollmentId', models.AutoField(primary_key=True, serialize=False)),
                ('SemesterCode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.semester')),
                ('StudentNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.student')),
                ('SubjectCode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('AttendId', models.AutoField(primary_key=True, serialize=False)),
                ('DateAndTime', models.DateTimeField(auto_now_add=True)),
                ('Status', models.CharField(max_length=10)),
                ('StudentNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.student')),
                ('SubjectCode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.subject')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='SubjectCode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.subject'),
        ),
    ]
